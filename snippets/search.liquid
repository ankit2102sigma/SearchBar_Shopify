<header-search id="header-search-{{ section.id }}" class="header-search">
  <form id="search-form">
    <input type="text" id="search-input" placeholder="Search..." />
  </form>

  <ul id="search-results"></ul>
  <div id="image-container"></div>
</header-search>

<script src="https://cdnjs.cloudflare.com/ajax/libs/he/1.2.0/he.js" defer></script>

<script>
  function truncateText(text, maxLength) {
    if (text.length > maxLength) {
      return text.substr(0, maxLength) + '...';
    }
    return text;
  }

  document.getElementById('search-form').addEventListener('submit', function(event) {
    event.preventDefault();
    const searchInput = document.getElementById('search-input').value.trim();
    if (searchInput.length >= 3) {
      window.location.href = `https://laptopifyy.myshopify.com/pages/search-result?q=${encodeURIComponent(searchInput)}`;
    }
  });

  document.getElementById('search-form').addEventListener('input', function(event) {
    event.preventDefault();

    const searchInput = document.getElementById('search-input').value.trim();
    const searchInputEncode = he.encode(searchInput);

    if (searchInput.length >= 3) {
      const cacheKey = `/search_${searchInputEncode}`;

      caches.open('search-cache').then(cache => {
        cache.match(cacheKey).then(response => {
          if (response) {
            response.json().then(data => {
              displaySearchResults(data);
            });
          } else {
              fetch(`http://localhost:8000/api/addressFinder?q=${searchInputEncode}`)
                .then(response => {
                  // Clone the response before using it
                  const responseClone = response.clone();
                  response.json().then(data => {
                    if (data != "") {
                      // Cache the response
                      caches.open('search-cache').then(cache => {
                        cache.put(cacheKey, responseClone);
                      });
                    }
                    displaySearchResults(data);
                  });
                })
                .catch(error => console.error("error", error));
            }

          setTimeout(() => {
            caches.delete('search-cache').then(() => {
              console.log('Cache cleared.');
            });
          }, 1 * 5 * 60* 1000);
        });
      });
    } else {
      const resultsContainer = document.getElementById('search-results');
      resultsContainer.innerHTML = '';
    }
  });

  function displaySearchResults(data) {
    const resultsContainer = document.getElementById('search-results');
    resultsContainer.innerHTML = '';

    if (data.length > 0) {
      data.slice(0, 4).forEach(result => {
        const listItem = document.createElement('li');
        listItem.id = 'search-list-li';
        const link = document.createElement('a');
        const imglink = document.createElement('a');
        imglink.href = `https://laptopifyy.myshopify.com/products/${result.handle}`;

        const image = document.createElement('img');
        image.src = result.image;
        image.alt = result.title;
        const sanitizedTitle = result.title.replace(/(<([^>]+)>)/gi, '');
        const truncatedTitle = truncateText(sanitizedTitle, 40); // Adjust the maximum length as needed
        link.textContent = truncatedTitle;

        link.href = `https://laptopifyy.myshopify.com/products/${result.handle}`;
        imglink.appendChild(image);
        listItem.appendChild(imglink);
        listItem.appendChild(link);
        resultsContainer.appendChild(listItem);
      });

      if (data.length > 4) {
        const showMoreItem = document.createElement('button');
        showMoreItem.textContent = 'Show More';
        showMoreItem.addEventListener('click', function() {
          // Send all data results to the next page
          const searchData = encodeURIComponent(JSON.stringify(data));
          console.log("searchData", searchData);
          window.location.href = `https://laptopifyy.myshopify.com/pages/search-result?q=${encodeURIComponent(searchInput)}`;
        });
        resultsContainer.appendChild(showMoreItem);
      }
    } else {
      const noResultsItem = document.createElement('li');
      noResultsItem.textContent = 'No results found';
      resultsContainer.appendChild(noResultsItem);
    }
  }

        function displayError(message) {
  const resultsContainer = document.getElementById('search-results');
  resultsContainer.innerHTML = '';

  const errorItem = document.createElement('li');
  errorItem.textContent = message;
  errorItem.style.color = 'red';

  resultsContainer.appendChild(errorItem);
}
</script>
